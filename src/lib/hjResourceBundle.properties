# @(#)hjResourceBundle.properties	1.21 99/03/09


#
#     General applet error messages
#     (grabbed from sun.applet.resources.MsgAppletViewer.java)
#

appletioexception.loadclass.throw.interrupted=class loading interrupted: {0}
appletioexception.loadclass.throw.notloaded=class not loaded: {0}
appletioexception.loadclass.throw.redirect=Resource not loaded: Illegal redirect of {0} to {1}
appletioexception.throw.illegal.relative=Resource not loaded: {0} specifies a different host or port
appletclassloader.filenotfound=File not found when looking for: {0}
appletclassloader.fileformat=File format exception when loading: {0}
appletclassloader.fileioexception=I/O exception when loading: {0}
appletclassloader.fileexception={0} exception when loading: {1}
appletclassloader.filedeath={0} killed when loading: {1}
appletclassloader.fileerror={0} error when loading: {1}
appletresource.notfound=Resource {0} not found
appletpanel.runloader.err=Either object or code parameter.
appletpanel.runloader.exception=exception while deserializing {0}
appletpanel.destroyed=Applet destroyed.
appletpanel.loaded=Applet loaded.
appletpanel.started=Applet started.
appletpanel.inited=Applet initialized.
appletpanel.stopped=Applet stopped.
appletpanel.disposed=Applet disposed.
appletpanel.nocode=APPLET tag missing CODE parameter.
appletpanel.notfound=load: class {0} not found.
appletpanel.nocreate=load: {0} can''t be instantiated.
appletpanel.noconstruct=load: {0} is not public or has no public constructor.
appletpanel.death=killed
appletpanel.exception=exception: {0}.
appletpanel.exception2=exception: {0}: {1}.
appletpanel.error=error: {0}.
appletpanel.error2=error: {0}: {1}.
appletpanel.notloaded=Init: applet not loaded.
appletpanel.notinited=Start: applet not initialized.
appletpanel.notstarted=Stop: applet not started.
appletpanel.notstopped=Destroy: applet not stopped.
appletpanel.notdestroyed=Dispose: applet not destroyed.
appletpanel.notdisposed=Load: applet not disposed.
appletpanel.bail=Interrupted: bailing out.
appletpanel.filenotfound=File not found when looking for: {0}
appletpanel.fileformat=File format exception when loading: {0}
appletpanel.fileioexception=I/O exception when loading: {0}
appletpanel.fileexception={0} exception when loading: {1}
appletpanel.filedeath={0} killed when loading: {1}
appletpanel.fileerror={0} error when loading: {1}
appletillegalargumentexception.objectinputstream=AppletObjectInputStream requires non-null loader
appletsecurityexception.checkcreateclassloader=Security Exception: classloader
appletsecurityexception.checkaccess.thread=Security Exception: thread
appletsecurityexception.checkaccess.threadgroup=Security Exception: threadgroup: {0}
appletsecurityexception.checkexit=Security Exception: exit: {0}
appletsecurityexception.checkexec=Security Exception: exec: {0}
appletsecurityexception.checklink=Security Exception: link: {0}
appletsecurityexception.checkpropsaccess=Security Exception: properties
appletsecurityexception.checkpropsaccess.key=Security Exception: properties access {0}
appletsecurityexception.checkread.exception1=appletsecurityexception.checkread.exception1
appletsecurityexception.checkread.exception2=Security Exception: file.read: {0}
appletsecurityexception.checkread=Security Exception: file.read: {0} == {1}
appletsecurityexception.checkwrite.exception=appletsecurityexception.checkwrite.exception
appletsecurityexception.checkwrite=Security Exception: file.write: {0} == {1}
appletsecurityexception.checkread.fd=Security Exception: fd.read
appletsecurityexception.checkwrite.fd=Security Exception: fd.write
appletsecurityexception.checklisten=Security Exception: socket.listen: {0}
appletsecurityexception.checkaccept=Security Exception: socket.accept: {0}:{1}
appletsecurityexception.checkmulticast=Security Exception: socket multicast: {0}
appletsecurityexception.checkconnect.networknone=Security Exception: socket.connect: {0}->{1}
appletsecurityexception.checkconnect.networkhost1=Security Exception: Could not connect to {0} with origin from {1}.
appletsecurityexception.checkconnect.networkhost2=Security Exception: Could not resolve IP for host {0} or for {1}. 
appletsecurityexception.checkconnect.networkhost3=Security Exception: Could not resolve IP for host {0}. See the trustProxy property.
appletsecurityexception.checkconnect=Security Exception: connect: {0}->{1}
appletsecurityexception.checkpackageaccess=Security Exception: cannot access package: {0}
appletsecurityexception.checkpackagedefinition=Security Exception: cannot define package: {0}
appletsecurityexception.cannotsetfactory=Security Exception: cannot set factory
appletsecurityexception.checkmemberaccess=Security Exception: check member access
appletsecurityexception.checkgetprintjob=Security Exception: getPrintJob
appletsecurityexception.checksystemclipboardaccess=Security Exception: getSystemClipboard
appletsecurityexception.checkawteventqueueaccess=Security Exception: getEventQueue
appletsecurityexception.checksecurityaccess=Security Exception: security operation: {0}
appletsecurityexception.getsecuritycontext.unknown=unknown class loader type. unable to check for getContext
appletsecurityexception.checkread.unknown=unknown class loader type. unable to check for checking read {0}
appletsecurityexception.checkconnect.unknown=unknown class loader type. unable to check for checking connect




viewerunknown.cancel.msg=Cancelled


viewerunknown.view.text=View in &browser.name; 
button.viewerunknown.view.text=View in &browser.name; 

errormsg.bogus.protocol="Unknown protocol: "

#
#   Dialogs
#

confirm.resource-manager.overtwarning.title=&browser.name;
confirm.resource-manager.overtwarning.prompt=&browser.name; is reducing memory usage by removing from memory\nsome pages you have already visited.  They will be reloaded\nwhen you choose to revisit them.  &browser.name; may not be able to\nkeep information you have entered onto these pages.\n \nYou might want to logout and relogin.
confirm.resource-manager.overtwarning.button.0=Continue

confirm.contentviewer.description.title=&browser.name;
confirm.contentviewer.description.prompt=You need to provide a description for\n the new content-type you are defining.
confirm.contentviewer.description.button.0=Continue

#
#     HTML Dialog Templates
#


#
#     Progress Dialog
#

progressDialog.BytesTransferredInd.maxSizeTemplate=/{0}
progressDialog.BPSIndicator.bps={0} (max {1}) bytes/second
progressDialog.BytesTransferredInd.label=Bytes transferred: {0}{1}
progressDialog.saveInto.label=Destination:
#progressDialog.stop.label=Stop download
button.progressDialog.stop.text=Stop download
progressDialog.title.label=Saving to:
progressDialog.transfer.label=Bytes transferred:
progressDialog.url.label=Source:

#  
#     JavaScript alert/prompt dialogs

#hotjava.javascript.dialog.ok=OK
#hotjava.javascript.dialog.cancel=Cancel
#hotjava.javascript.dialog.clear=Clear
button.hotjava.javascript.dialog.ok.text=OK
button.hotjava.javascript.dialog.cancel.text=Cancel
button.hotjava.javascript.dialog.clear.text=Clear

#REMIND: these could be factored out into a separate resource bundle,
# packaged with the (optional) JavaScript implementation
hotjava.javascript.dialog.title=[JavaScript Application]
hotjava.javascript.close.confirm.text=The page you are viewing is trying to close the window.\nDo you want to close this window?
hotjava.javascript.error.statusmsg=JavaScript errors. See console for details.
hotjava.javascript.error.warningmsg=JavaScript Warning at {0}, line {1}: {2}
hotjava.javascript.error.simplewarningmsg=JavaScript Warning: {0}
hotjava.javascript.error.errormsg=JavaScript Error at {0}, line {1}: {2}
hotjava.javascript.error.simpleerrormsg=JavaScript Error: {0}
hotjava.javascript.error.toofewargs=Too few arguments
hotjava.javascript.error.invalidurl=Invalid URL specified: {0}
hotjava.javascript.error.internal=Internal error in {0}: {1}
hotjava.javascript.error.internalsimple=Internal error: {0}
hotjava.javascript.error.stackoverflow=Stack overflow
hotjava.javascript.error.sameorigin=Access disallowed from scripts at {0} to documents at another domain.
hotjava.javascript.error.noseccontext=No security context found
#
#      Exception Dialog
#

button.applet.error.cancel.text=Close
applet.error.title=Exception Notice

hotjava.site.title=Web Site Details
hotjava.site.sitename=Site name:
hotjava.site.ip=IP Address:
hotjava.site.none.found=none found

button.hotjava.site.ok.text=OK

hotjava.group.title=Security Group Details
hotjava.group.noinfo=No additional information to display.
button.hotjava.group.ok.text=OK

button.hotjava.certauths.text=Certificate Authorities
button.hotjava.sitecerts.text=Site Certificates
button.hotjava.sitenames.text=Site Names

#
# More choices dialog
#

forms.choice.more.choices=More choices...
forms.choice.more.ok=OK
forms.choice.more.cancel=Cancel
button.forms.choice.more.ok.text=OK
button.forms.choice.more.cancel.text=Cancel
forms.choice.more.dialog.title=Choose one:

#
#     AWT Messages
#

awt.appletWarning=Warning: Applet Window

# These are the built-in values - there may be a speed penalty in
# setting these two:
#awt.image.incrementaldraw=true
#awt.image.redrawrate=100

#
#     DTD Errors
#

dtderr.eof=Unexpected EOF.
dtderr.eof.arg=Unexpected EOF in {0}.
dtderr.exception=Exception {0}: {1}.
dtderr.expected=Expected: {0}.
dtderr.invalid=Invalid {0}.
dtderr.invalid.arg=Invalid {0}: {1}.
dtderr.ignore=Ignoring {0}.
dtderr.ioexception=I/O exception
dtderr.markup=Invalid markup.
dtderr.premature=DTD ends before EOF.
dtderr.terminated=Terminated.
dtderr.undef.entref=Unknown entity reference: {0}.

#
#     HTML Errors
#

htmlerr.attvalerr=Invalid attribute value specification.
htmlerr.comment.close='--' expected
htmlerr.delimiter.missing=string delimiter missing.
htmlerr.doctitle=HTML Errors
htmlerr.end.missing=End tag for <{0}> missing.
htmlerr.end.unexpected=End tag for <{0}> not expected.
htmlerr.end.unrecognized=End tag </{0}> unrecognized.
htmlerr.end.extra.tag=Extraneous end tag </{0}>.
htmlerr.eof=unexpected EOF.
htmlerr.eof.comment=EOF in comment.
htmlerr.eof.literal=EOF in literal content.
htmlerr.exception=Exception {0}: {1}.
htmlerr.expected=Expected {0}.
htmlerr.expected.endtagname=Missing end tag name.
htmlerr.expected.tagname=Tag name expected.
htmlerr.form.ended=Form element <{0}> appeared after </FORM>, adding it to last seen form.
htmlerr.form.expected=Form element <{0}> created without enclosing form.
htmlerr.ident.expected=Identifier expected.
htmlerr.invalid.commentchar=Invalid character ({0}) in comment.
htmlerr.invalid.entref=Invalid general entity reference: &{0};.
htmlerr.invalid.markup=Invalid markup.
htmlerr.invalid.shortend=Invalid short end tag.
htmlerr.invalid.tagatt=Invalid attribute ({0}) in tag <{1}>.
htmlerr.invalid.tagattval=Invalid value for attribute ({0}) in tag <{1}>.
htmlerr.invalid.tagchar=Invalid character ({0}) in tag <{1}>.
htmlerr.ioexception=I/O error.
htmlerr.javascript.unsupported=JavaScript unsupported.
htmlerr.multi.tagatt=Attribute ({0}) in tag <{1}> specified more than once.
htmlerr.req.att=Required attribute ({0}) missing in <{1}> tag.
htmlerr.start.missing=Start tag for <{0}> missing.  Inserting tag.
htmlerr.tag.ignore= Tag <{0}> invalid in current context.  Ignoring tag.
htmlerr.tag.unexpected=Tag <{0}> not expected.
htmlerr.tag.unrecognized=Tag <{0}> unrecognized.
htmlerr.terminated=Terminated.
htmlerr.unexpected.pcdata=Character data not expected.
htmlerr.unmatched.endtag=Unmatched end tag </{0}>.

# Error message when there are too many HTML errors

htmlerr.too.many.errors=Over {0} errors in document.

#
#     HTTP Errors
#

http.forbidden=Forbidden to access page

#
#     Security Errors
#

security.classloader=Applets can't create class loaders.
security.exit=Applets can't exit the virtual machine.
security.link=Applets can't link in dynamic libraries.
security.properties=Applets can't override system properties.
security.thread=This applet can't access this thread.
security.threadgroup=This applet can't access this thread group.

#
#     Status Messages
#

hotjava.search.msg=Enter keywords for index search...

#	Status message to indicate formatting completion

hotjava.formatting.done=Document Formatting Complete


#       Printing status messages

printjob.cancelled.msg=Printing cancelled.
printjob.done.msg=Printing....  Done.
printjob.err.msg=Printing encountered error.
printjob.format.msg=Formatting document for printing
printjob.page.msg=Printing.... page {0}
printjob.start.msg=Printing....

#     The following font properties control which fonts are used
#     in the HotJava Browser interface.  You can use these
#     properties to specify alternate fonts available through the AWT
#     package (Courier, Dialog, DialogInput, Helvetica, Monospaced, 
#     SansSerif, Serif, TimesRoman).
#
#     Font used to display HTML <alt> attribute text associated with the <img> tag

altmessagefont=Dialog-italic-12



#     Default typeface for HTML documents; can be changed on the 
#     Display Preferences page

hotjava.docfont=SansSerif

#     Default typeface for printing HTML documents; can be changed on the
#     Display Preferences page

hotjava.printfont=Serif

#     Typeface for the header and footer when printing

hotjava.print.label.font=SansSerif-8

#     Default font size (relative to fonts.sizes property); can be changed on the
#       Display Preferences page


hotjava.html.header=Generated by &browser.name;

#       Title for Untitled Pages

hotjava.untitled=Untitled

#       Title for HTML Source page

hotjava.htmlsource=HTML Source

#     Applet Tags

applet.delay.start=Loading delayed applet

#     Form Tags

form.title={0} form results

#     Character set for text

hotjava.charset=8859_1

#     Default language for HotJava

hotjava.defaultLanguage=en-US

#     Cookie properties

hotjava.cookies.saving=[Saving cookies]

#       Various messages for file: protocol

file.dir.title=Directory Listing
file.dir.datefmt=hh:mm a dd, yyyy
file.dir.parent=Parent Directory
file.icon.height=32
file.icon.width=32
file.dir.bytes=bytes
file.dir.kb=Kb
file.dir.mb=Mb

