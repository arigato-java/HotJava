# @(#)hotjavaBean.properties	1.49 99/04/20 1.49, 04/20/99

#####################################################################
#       HotJava Non-Localizable System Properties -- Bean           #
#####################################################################
#
# This set of properties is used by both the bean and the browser.
# Values in this file can be overridden by hotjavaBrowser.properties.
#
# Note: This file organizes HotJava's properties into
#       the following categories (alphabetical order).
#
#       If you are viewing this file in HotJava, you can use
#       "Find in Document" on HotJava's Edit menu to search for 
#       the following headings.
#
#    *  Applet Interface
#    *  Browser ID
#    *  Content Viewers
#    *  Dialogs
#    *  Error and Status Messages
#    *  Fonts
#    *  HotJava Browser Window
#    *  HTML Elements
#    *  Internationalization
#    *  Menus
#    *  Navigation Buttons
#    *  Network
#    *  Pages
#    *  Secondary Windows
#    *  Security
#    *  System
#

#   Browser ID Properties
#     Note that properties.version must be present, else Globals.java
#     throws an exception.
#
#     Note also that properties.version needs to be in the SCCS format that
#     automatically substitutes version and date at check-in time, e.g.
#     the SCCS checked-out file should look like: 
#     <percent>I<percent>, <percent>G<percent> (where each percent is 
#     replaced by %.  These values will be substituted with the actual
#     updated version and date when the SCCS file is checked in.
#
# version of this release of the bean (also see browser.version and 
# release.version in src/lib/hotjavaBrowser.properties)
#
browser.bean.version=3.0
browser=HotJava
browser.differentiator=Sun
properties.version= 1.49, 04/20/99
browser.vendor=Sun Microsystems
http.agent=Mozilla/3.0

applet.package=sunw.hotjava.bean.applets


########################################################################
#
#   Content Viewers Configuration Properties
#

contentviewerunknown.error.width=550
contentviewerunknown.error.height=250


########################################################################
#
#   Fonts
#
#     The following font properties control which fonts are used
#     in the HotJava Browser interface.  You can use these
#     properties to specify alternate fonts available through the AWT
#     package (Courier, Dialog, DialogInput, Helvetica, Monospaced, 
#     SansSerif, Serif, Times Roman).
#

# 
#     Bogus old settings fonts.sizes=6,8,9,10,12,14,18,24,36,48,56,64
#     Available typeface sizes

fonts.sizes=7,8,9,10,12,14,16,18,20,22,24,26,28

#
#     Available typeface sizes for printing

printfonts.sizes=6,7,8,9,10,12,14,16,18,20,22,24,26

#     Default typeface for HTML documents; can be changed on the Display Preferences page


#     Default font size (index within to fonts.sizes property); can be changed 
#     on the Display Preferences page.  Valid values are -3 .. 3.

hotjava.docfontsize=0

#     Default print font size (index within to printfonts.sizes property); 
#     can be changed on the Display Preferences page.  Valid values are 
#     -3 .. 3.

hotjava.printfontsize=0

#  Margins for printing.  Margins are expressed in points, where one point
#  is 1/72 of an inch.  The page decoration (i.e. page number and URL) are
#  drawn within the margins -- the margins give the spacing for content.

hotjava.print.margin.left=36
hotjava.print.margin.right=36
hotjava.print.margin.top=36
hotjava.print.margin.bottom=36

# Spacing, in points, between the top of the content and the bottom of
# the string that gives the url.  1/2" - pointsize recommended, as some
# printers can't print in the top 1/2" of the page.  The font used is
# called hotjava.print.label.font in the resource bundle.

hotjava.print.header.spacing=0

# Margin for the header (both left and right).

hotjava.print.header.margin=36
# 54 points = 3/4"

# Spacing, in points, between the bottom of the content and the top of the
# page number.

hotjava.print.footer.spacing=18


########################################################################
#
#   HotJava Browser Window Properties
#
#
#     Color
#


#       Color for indicating errors (brownish gray)

hotjava.errorcolor=0xC0C0C0

#       Window background color (light gray)

hotjava.background=0xD4D4D4

#       Default background color for pages (almost white)

hotjava.docbgcolor=0xFAFAFA

#       Cursor color (red)

hotjava.curcolor=0xFF0000

#       Color for indicating errors (brownish gray)


#       Color for showing selections (light yellow)

hotjava.selcolor=0xFFFFC0

#       Color for HTML "alt" attribute text strings (black)

hotjava.alttextcolor=0x000000

#
#     Content
#
#
#       Animation window
#


#       Should we underline links?  Set by AnchorStyleApplet

anchorStyle=true

#       Pixel dimensions for icons in directory listing

file.icon.height=26
file.icon.width=24



#
#     Placement
#

hotjava.x=10
hotjava.y=35



#
#     Size
#

hotjava.width=710
hotjava.height=730


#
#     Applet Tags
#

applet.class=sunw.hotjava.tags.APPLET
applet.error.columns=60
applet.error.rows=12
param.class=sunw.hotjava.tags.PARAM
applet.errimg=doc:/lib/images/applet-failed.gif
applet.delayimg=doc:/lib/images/applet-delayed.gif

#
#     Block Tags
#

address.class=sunw.hotjava.doc.BlockTagItem
address.label=addr
address.type=block
address.style=italic

blockquote.class=sunw.hotjava.doc.BlockTagItem
blockquote.type=block
blockquote.label=block
blockquote.above=100
blockquote.below=100
blockquote.left=40
blockquote.right=40

center.class=sunw.hotjava.doc.BlockTagItem
center.type=block
center.label=cent
center.format=center

div.class=sunw.hotjava.tags.DIV
div.type=block
div.label=div

listing.class=sunw.hotjava.doc.BlockTagItem
listing.type=verbatim
listing.format=none
listing.style=typewriter
listing.size=4
listing.nobreak=true
listing.above=80
listing.below=80


p.class=sunw.hotjava.tags.P
p.type=block
p.above=70
p.below=70



plaintext.class=sunw.hotjava.doc.BlockTagItem
plaintext.type=verbatim
plaintext.label=plain
plaintext.style=typewriter
plaintext.format=none
plaintext.nobreak=true
plaintext.above=80
plaintext.below=50

pre.class=sunw.hotjava.doc.BlockTagItem
pre.type=verbatim
# pre.format=none
pre.style=typewriter
pre.nobreak=true
pre.above=50
pre.below=50

xmp.class=sunw.hotjava.doc.BlockTagItem
xmp.type=verbatim
xmp.format=none
xmp.style=typewriter
xmp.nobreak=true
xmp.size=4
xmp.above=80
xmp.below=80


#
#     Break Tags
#

br.class=sunw.hotjava.tags.BR
br.type=break

#
#     Form Tags
#

form.type=form
form.class=sunw.hotjava.forms.FORM
form.above=150
form.below=100
input.type=form
input.class=sunw.hotjava.forms.INPUT
input.font=Monospaced-plain-12
input.adjustment.sun.awt.motif.MToolkit=-4
input.adjustment.sun.awt.tiny.TinyToolkit=4
input.adjustment.sun.awt.win32.MToolkit=-4
input.adjustment.sun.awt.windows.WToolkit=-16

option.type=form
option.class=sunw.hotjava.forms.OPTION
select.type=form
select.class=sunw.hotjava.forms.SELECT
textarea.type=form
textarea.class=sunw.hotjava.forms.TEXTAREA

#
#     Frame Tags
#

frame.class=sunw.hotjava.tags.FRAME
frameset.class=sunw.hotjava.tags.FRAMESET
noframe.class=sunw.hotjava.tags.NOFRAME
noframes.class=sunw.hotjava.tags.NOFRAME

#
#     Heading Tags
#

h1.class=sunw.hotjava.tags.Heading
h1.type=header
h1.above=70
h1.below=70
h1.size=+2
h1.style=bold

h2.class=sunw.hotjava.tags.Heading
h2.type=header
h2.above=70
h2.below=70
h2.size=+1
h2.style=bold

h3.class=sunw.hotjava.tags.Heading
h3.type=header
h3.above=80
h3.below=80
h3.style=bold

h4.class=sunw.hotjava.tags.Heading
h4.type=header
h4.above=80
h4.below=80
h4.size=-1
h4.style=bold

h5.class=sunw.hotjava.tags.Heading
h5.type=header
h5.above=100
h5.below=100
h5.size=-2
h5.style=bold

h6.class=sunw.hotjava.tags.Heading
h6.type=header
h6.above=100
h6.below=100
h6.size=-3
h6.style=bold

#
#     Image Tags
#

img.class=sunw.hotjava.tags.IMG
img.load=Loading image
img.errimg=doc:/lib/images/image-failed.gif
img.delayimg=doc:/lib/images/image-delayed.gif

#     Image Objects in JavaScript

imgObject.class=com.sun.javascript.ImageObject

#
#     Imagemap Tags
#

area.class=sunw.hotjava.tags.AREA
map.class=sunw.hotjava.tags.MAP

#
#     List Tags
#

dir.class=sunw.hotjava.tags.UL
dir.type=list
dir.above=100
dir.below=100
dir.left=40

dl.class=sunw.hotjava.doc.BlockTagItem
dl.type=list
dl.above=100
dl.below=100
dl.left=40

menu.class=sunw.hotjava.tags.UL
menu.type=list
menu.label=menu
menu.above=100
menu.below=100
menu.left=40

ol.class=sunw.hotjava.tags.OL
ol.type=list
ol.above=100
ol.below=100
ol.left=40

ul.class=sunw.hotjava.tags.UL
ul.type=list
ul.above=100
ul.below=100
ul.left=40

#
#     List Item Tags
#

dd.class=sunw.hotjava.doc.BulletTagItem
dd.type=item
dd.left=40

dt.class=sunw.hotjava.doc.BulletTagItem
dt.type=item
dt.above=0

li.class=sunw.hotjava.tags.LI
li.type=item

#
#     Miscellaneous HTML Tags
#

a.class=sunw.hotjava.tags.A
a.type=style
a.newcolor=0x2020C0
a.oldcolor=0x8020C0
a.activecolor=0xFF4040

body.class=sunw.hotjava.doc.BlockTagItem
head.class=sunw.hotjava.doc.BlockTagItem
hr.class=sunw.hotjava.tags.HR
html.class=sunw.hotjava.doc.BlockTagItem
script.class=sunw.hotjava.tags.SCRIPT
noscript.class=sunw.hotjava.tags.NOSCRIPT
title.class=sunw.hotjava.doc.BlockTagItem
wbr.class=sunw.hotjava.tags.WBR
isindex.class=sunw.hotjava.tags.ISINDEX

#
#     Object Tags
#

object.class=sunw.hotjava.tags.OBJECT

#
#     Style (Flow) Tags
#

b.class=sunw.hotjava.doc.FlowTagItem
b.type=style
b.style=bold

basefont.class=sunw.hotjava.tags.BASEFONT
basefont.type=style
basefont.label=basefont

big.type=style
big.size=+2

cite.class=sunw.hotjava.doc.FlowTagItem
cite.type=style
cite.style=italic

code.class=sunw.hotjava.doc.FlowTagItem
code.type=style
code.style=typewriter
code.size=-1

dfn.class=sunw.hotjava.doc.FlowTagItem
dfn.type=style
dfn.style=italic

em.class=sunw.hotjava.doc.FlowTagItem
em.type=style
em.style=italic

font.class=sunw.hotjava.tags.FONT
font.type=style
font.label=font

i.class=sunw.hotjava.doc.FlowTagItem
i.style=italic

kbd.class=sunw.hotjava.doc.FlowTagItem
kbd.type=style
kbd.style=typewriter
kbd.size=-1

nobr.class=sunw.hotjava.doc.FlowTagItem
nobr.type=style
nobr.nobreak=true

s.class=sunw.hotjava.doc.FlowTagItem
s.type=style
s.style=strike

samp.class=sunw.hotjava.doc.FlowTagItem
samp.type=style
samp.label=smp
samp.style=typewriter
samp.size=-1

small.type=style
small.size=-2

strike.class=sunw.hotjava.doc.FlowTagItem
strike.type=style
strike.style=strike

strong.class=sunw.hotjava.doc.FlowTagItem
strong.type=style
strong.style=bold

sub.type=style
sub.style=subscript

sup.type=style
sup.style=superscript

tt.class=sunw.hotjava.doc.FlowTagItem
tt.type=style
tt.style=typewriter

u.class=sunw.hotjava.doc.FlowTagItem
u.type=style
u.style=underline

var.class=sunw.hotjava.doc.FlowTagItem
var.type=style
var.style=bolditalic

blink.delay=850
hotjava.blink=true

#
#     Table Tags
#

caption.class=sunw.hotjava.tables.CAPTION

table.class=sunw.hotjava.tables.TABLE
table.above=0
table.below=0

td.class=sunw.hotjava.tables.TD

# Note -- reusing TD since they're so close
th.class=sunw.hotjava.tables.TD
tr.class=sunw.hotjava.tables.TR

#
#   Other tags
#

nohotjava.class=sunw.hotjava.tags.NOHOTJAVA

spacer.class=sunw.hotjava.tags.SPACER



#     
#    Cache documents?
#
hotjava.documents.disablecache=false

#
#     Image/Applet Loading
#
#       Should we delay loading applets?
#       The delay loading properties are set by DelayedLoadingApplet;
#       also used by EditorFrame.
#

delayAppletLoading=false

#       Default value for delay image loading.

delayImageLoading=false

#       Default value for loading background images

#       Default timeout values for each arriving image
#       This is to help us prevent trying to continue to fetch
#       image over a slow connection or machine holding up page
#       formatting. When timeout expires, we put up a delayed
#       image icon.
image.timeout=10000

#       Default timeout values for all arriving images
#       This is to help us prevent trying to continue to fetch
#       images over a slow connection or machine holding up page
#       formatting. When timeout expires, we put up a delayed
#       image icon.
allimages.timeout=60000


#
#       Written to $home/.hotjava/properties/when set by FtpProxyApplet
#

#       Fallback URL for doc protocol.  
#
#  Use this if you want to install HotJava's documents on a local web
#  server.  This can be particularly useful in a JavaOS context.
#
# doc.url=


#       Where the images live


#
#     Proxies
#

#
#       Written to $home/.hotjava/properties/when set by FtpProxyApplet
#
#
# ftpProxySet=false

#
#       Written to $home/.hotjava/properties when set by CachingProxyApplet
#

# Don't set them here.  If they're already defined (for example, with the
# Luna guest login), there's no reason to stomp on them.
# http.proxyHost=
# http.proxyPort=

# 
# Set localhost to be non-proxying by default
http.nonProxyHost=localhost


#     Access Control Lists
#       Files applets are allowed to read and locations where applets
#       are allowed to write files (use ":" to separate entries).
#       acl.read and acl.write may be defined by AccessPath Applet.
#       A "+" setting indicates that the default values are used.
#

acl.read=+
acl.read.default=

acl.write=+
acl.write.default=

#
# enable a specific set of properties that applets can access

java.version.applet=true
java.vendor.applet=true
java.vendor.url.applet=true
java.class.version.applet=true
os.name.applet=true
os.version.applet=true
os.arch.applet=true
file.separator.applet=true
path.separator.applet=true
line.separator.applet=true

browser.vendor.applet=true
browser.version.applet=true
browser.applet=true

#
#  Enable specific protocols for networking.  Only applets loaded via these
#  protocols will be allowed to connect to the java.net.URL.getHost() from
#  which they came.
#
#  NOTE:  Some protocols will return a value from getHost() that is either
#	  meaningless or incorrect.  For example, file: will sometimes return
#	  "localhost" even though the applet wasn't loaded over the net.  Such
#	  protocols should  not be listed here.

applet.http.host.meaningful=true
applet.https.host.meaningful=true
applet.ftp.host.meaningful=true
applet.gopher.host.meaningful=true

#
#     Cookie properties
#


#
#     Appletviewer (signed applet class loading)
#

appletviewer.security.allowUnsigned=true

#
#     Applet Allow InterApplet Communication between Frames(documents)
#

hotjava.security.getInterFrameApplets=false

hotjava.default.security = High
hotjava.default.signed.security = Medium
#
#     Allow applets to access the real frame they reside in (via
#     Component.getParent()).  If false, they get an instance of
#     an invisible Frame.
#
hotjava.security.giveRealFrame=false


#
#     Package Restrictions
#       Restrict applet references to classes.  package.restrict.access.sun
#	will prevent applets from referencing any class in a package
#	that begins with "sun.".
#

package.restrict.access.sun=true
package.restrict.access.sunw.hotjava=true
package.restrict.access.sunw.html=true

#
#     Package restrictions
#	Restrict packages in which applets may define classes.
#

package.restrict.definition.sun=true
package.restrict.definition.java=true
package.restrict.definition.sunw.hotjava=true
package.restrict.definition.sunw.html=true


#     TrustProxy
#       Do we trust IP addresses that we can't resolve directly
#       ourselves?  Referenced by AppletSecurity
#

trustProxy=true


#
#     AppletPanel Cleanup, in ms
#
#     This tells how long we'll wait after posting an applet destroy
#     event before we consider forcibly reaping applet threads (by
#     calling Thread.interrupt()).  Setting to -1 disables this feature
#     (i.e. we won't reap threads).
#
#     This also determines the maximum amount of time we'll wait at
#     program shutdown to let applets terminate.
#

appletpanel.thread.cleanup.interval=5000

#
#     AppletPanel cleanup, part 2.  This is how long we'll wait after calling
#     Thread.interrupt() before we'll try the stronger Thread.stop().
#     Setting to -1 disables this feature.
#

appletpanel.thread.destroy.interval=500


#	Properties save delay, in ms.  After a system property is set, we 
#	make sure the system properties file gets written out within this
#	many ms.

hotjava.props.save.delay=1000

#
#	Quit watchdog timeout.  When the browser quits, we start a timer.
#	If the given delay expires while we're attempting to terminate
#	the browser nicely, we just call System.exit() directly.  This timeout
#	should be larger than the sum of appletpanel.thread.cleanup.interval
#	and appletpanel.thread.destroy.interval


#
#     DTD (Document Type Definition)
#

dtd=html32
public.map=doc:/lib/dtds/public.map

#
#     Gopher Images
#     These are internal images defined within html
#     that html authors can use to indicate what
#     kind of image they want displayed.  These
#     properties point to our representation of
#     these images.
#

internal-gopher-binary=doc:/lib/images/ftp/binary.gif
internal-gopher-index=doc:/lib/images/ftp/index.gif
internal-gopher-image=doc:/lib/images/ftp/image.gif
internal-gopher-menu=doc:/lib/images/ftp/directory.gif
internal-gopher-movie=doc:/lib/images/ftp/video.gif
internal-gopher-sound=doc:/lib/images/ftp/snd.gif
internal-gopher-text=doc:/lib/images/ftp/text.gif
internal-gopher-telnet=doc:/lib/images/ftp/telnet.gif
internal-gopher-unknown=doc:/lib/images/ftp/file.gif


#
#     Text Chunksize
#     Value for text chunksize (amount fetched); smaller chunks may
#     improve performance

hotjava.plaintext.chunksize=2048


#
#      Enable a line-break optimization when formatting text.  Setting
#      this true can speed text formatting 3x in certain cases.

hotjava.optimizeLineBreaks=false

#
#  Location of the images
#
images.loc=/lib/images/

#
#     Applet Tags
#

applet.errimg=applet-failed.gif
applet.delayimg=applet-delayed.gif

#
#  HTML Dialog templates
#

template.app-launch-error.html=/lib/templates/bean/app-launch-error.html
template.viewer.unknown.html=/lib/templates/bean/viewer.unknown.html
template.socks.open.html=/lib/templates/bean/socks.open.html
template.unknown.host.html=/lib/templates/bean/unknown.host.html
template.unknown.url.html=/lib/templates/bean/unknown.url.html
template.unknown.protocol.html=/lib/templates/bean/unknown.protocol.html
template.unknown.file.html=/lib/templates/bean/unknown.file.html
#
#     Image Tags
#
img.errimg=image-failed.gif
img.delayimg=image-delayed.gif


#
#  The Bean's customizer for SystemProperties
#

#  Colors of box that's used to launch the editor
bean.edit.property.fg=White
bean.edit.property.bg=Blue
bean.show.property.fg=White
bean.show.property.bg=Blue

bean.edit.put.error.width=550
bean.edit.put.error.height=250


#
# Docstack depths.  "Contents" is how far back we keep widgets, and "logical"
# is how far back we keep the URL to reconstruct the document.  These get
# overridden by bean/HotJavaDocumentStack
#
hotjava.docstack.contents.depth=0
hotjava.docstack.logical.depth=0


#
# Other stuff
#
displayBackgroundImages=true
hotjava.default.security.manager=sunw.hotjava.bean.BeanPolicy
altmessagefont=Dialog-italic-12
hotjava.charset=8859_1

#
# JavaScript settings
#
hotjava.javascript.log.size=300

#
#     Locations
#
#       Default home page
#       Recognized only in the /lib/properties system file; used when www.home
#       is absent from $home/.hotjava/properties
#

home.url=http://sun.com

#     List of character set identifiers HotJava can register with servers

hotjava.acceptCharsets=\
 cp1250, cp1251, cp1252, cp1253, cp1254, cp1257, cp437, cp737, cp775,	\
 cp850, cp852, cp855, cp857, cp860, cp861, cp863, cp865, cp866, cp869,	\
 cp874, EUCJIS, JIS, JIS0208, MacCentralEurope, MacCroatian,		\
 MacCyrillic, MacGreek, MacIceland, MacRoman, MacRomania, MacThai,	\
 MacTurkish, MacUkraine, SJIS, US-ASCII, UTF8, iso-8859-1, iso-8859-2,	\
 iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-7, iso-8859-9, koi8-r,    \
 Cp1256, 8859-6, 8859-8, TIS620, 8859-15, KSC5601, GB2312, Big5, CNS11643
